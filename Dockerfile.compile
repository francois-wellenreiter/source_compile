ARG DOCKER_BASE=${DOCKER_REGISTRY}ubuntu:18.04
FROM ${DOCKER_BASE} AS base

LABEL maintainer Francois WELLENREITER wellen@free.fr \
      description="Optimized for CUDA compilation"

USER root
WORKDIR /tmp

RUN apt-get update && \
apt-get -y dist-upgrade && \
apt-get -y install libnss-wrapper locales \
tar bzip2 zip unzip ca-certificates wget curl \
software-properties-common apt-transport-https \
pkg-config g++ zlib1g-dev bison flex libgnutls28-dev \
libelf-dev bc libssl-dev libpixman-1-dev \
htop iotop iftop sysstat \
build-essential automake autoconf libtool cmake git bsdmainutils \
clang-tidy clang-format libboost-all-dev libboost-dev \
golang \
xsltproc libnl-3-dev \
libevent-dev \
gtk-doc-tools \
linuxbrew-wrapper \
libxml2-utils \
qtbase5-dev qtbase5-dev-tools \
flake8 \
libglib2.0-dev \
yasm libfuse-dev libwxbase3.0-dev \
python-pip python-six \
python3-pip \
python3-numpy python3-scipy  \
openjdk-8-jdk maven

RUN wget https://github.com/bazelbuild/bazel/releases/download/0.24.1/bazel-0.24.1-installer-linux-x86_64.sh && \
chmod +x bazel-0.24.1-installer-linux-x86_64.sh  && \
./bazel-0.24.1-installer-linux-x86_64.sh && \
rm -f bazel-0.24.1-installer-linux-x86_64.sh

RUN wget https://dl.bintray.com/sbt/debian/sbt-1.2.1.deb && \
dpkg -i ./sbt-1.2.1.deb && \
rm -f sbt-1.2.1.deb

RUN curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add - && \
add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) nightly" && \
apt-get update && \
apt-get -y install docker-ce

RUN pip3 install --upgrade setuptools \
        scikit-build cmake cffi typing \
        pyyaml networkx future pytest pybind11 requests

RUN apt-get -y autoremove  && apt-get autoclean

VOLUME ["/work"]
WORKDIR /work
CMD [ "bash","/code/compile.sh" ]

ARG DOCKER_BASE_CUDA=${DOCKER_REGISTRY}nvidia/cuda:10.1-cudnn7-devel-ubuntu18.04
FROM ${DOCKER_BASE_CUDA} AS cuda

COPY --from=base / /

ENV _COMPILE_FOR_CUDA_ 1
