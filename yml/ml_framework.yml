
tensorflow_tensorflow:
  enabled: true
  url: https://github.com/tensorflow/tensorflow.git
  branch: master
  build: 
    "cpu":
      [
      "PYTHON_BIN_PATH=`which python3` USE_DEFAULT_PYTHON_LIB_PATH=1 TF_NEED_MPI=0 TF_NEED_HDFS=1 TF_NEED_TENSORRT=0 TF_NEED_JEMALLOC=1 TF_NEED_OPENCL_SYCL=0 TF_NEED_COMPUTECPP=1 TF_NEED_OPENCL=0 TF_CUDA_CLANG=0 TF_DOWNLOAD_CLANG=0 TF_NEED_GCP=1 TF_NEED_AWS=1 TF_NEED_KAFKA=0 TF_ENABLE_XLA=1 TF_NEED_GDR=1 TF_NEED_VERBS=0 TF_NEED_CUDA=0 TF_NEED_ROCM=0 CC_OPT_FLAGS='-march=native' TF_SET_ANDROID_WORKSPACE=0 ./configure",
      "bazel build --config=v2 //tensorflow/tools/pip_package:build_pip_package",
      "./bazel-bin/tensorflow/tools/pip_package/build_pip_package ./tensorflow_pkg",
      "bazel shutdown"
      ]
    "cuda":
      [
      "PYTHON_BIN_PATH=`which python3` USE_DEFAULT_PYTHON_LIB_PATH=1 TF_NEED_MPI=0 TF_NEED_HDFS=1 TF_NEED_TENSORRT=0 TF_NEED_JEMALLOC=1 TF_NEED_OPENCL_SYCL=0 TF_NEED_COMPUTECPP=1 TF_NEED_OPENCL=0 TF_CUDA_CLANG=0 TF_DOWNLOAD_CLANG=0 TF_NEED_GCP=1 TF_NEED_AWS=1 TF_NEED_KAFKA=0 TF_ENABLE_XLA=1 TF_NEED_GDR=1 TF_NEED_VERBS=0 TF_NEED_CUDA=1 TF_NEED_ROCM=0 CC_OPT_FLAGS='-march=native' TF_SET_ANDROID_WORKSPACE=0 ./configure",
      "bazel build --config=cuda //tensorflow/tools/pip_package:build_pip_package",
      "./bazel-bin/tensorflow/tools/pip_package/build_pip_package ./tensorflow_pkg",
      "bazel shutdown"
      ]
  clean:
    [
    "bazel clean",
    "bazel shutdown",
    "rm -f ./.bazelrc"
    ]

tensorflow_networking:
  enabled: true
  url: https://github.com/tensorflow/networking.git
  branch: master
  build:
    "cpu":
      [
      "TF_NEED_MPI=1 ./configure",
      "bazel build -c opt //tensorflow_networking/mpi:all",
      "bazel build -c opt //tensorflow_networking/mpi_collectives:all"
      ]

graphcore_tensorflow:
  url: https://github.com/graphcore/tensorflow.git
  branch: r2.1/sdk-release-1.3

horovod_horovod:
  deps: [ tensorflow_tensorflow ]
  url: https://github.com/horovod/horovod.git
  branch: master
  build:
    "cpu": [ "python3 ./setup.py build_ext" ]
    "cuda": [ "python3 ./setup.py build_ext" ]
  clean: [ "python3 ./setup.py clean" ]

pytorch_pytorch:
  deps: [ python_cpython, gnu_gcc ] 
  url: https://github.com/pytorch/pytorch.git
  branch: master
  build:
    "cpu": [ "python3 ./setup.py build_ext" ]

mxnet_mxnet:
  deps: [ python_cpython, gnu_gcc ] 
  url: https://github.com/apache/incubator-mxnet
  branch: master
  build:
    "cpu": [ "make -j$__PROCS__" ]
  clean: [ "make clean" ]

scikit_sklearn:
  deps: [ python_cpython, gnu_gcc ] 
  url: https://github.com/scikit-learn/scikit-learn.git
  branch: master
  build:
    "cpu": [ "python3 ./setup.py build_ext" ]
  clean: [ "python3 ./setup.py clean" ]

